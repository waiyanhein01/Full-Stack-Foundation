1. npm init -y
2. npm i typescript ts-node @types/node nodemon --save-dev
3. npx tsc --init
4. npm i jest ts-jest supertest @types/jest @types/supertest jest-environment-node --save-dev
5. npm i express dotenv cors helmet morgan jest-config
6. npm i @types/express @types/cors @types/morgan --save-dev
7. npm i bcrypt compression express-rate-limit express-validator jsonwebtoken multer
8. npm i @types/bcrypt @types/compression @types/jsonwebtoken @types/multer --save-dev


***
https://www.prisma.io/docs/orm/reference/prisma-schema-reference#string

bullMQ , Redis , ioredis
( Queue , Job, Worker )

App ---> job ( Image Optimization Task ) ---> Queue ---> Redis <--- Worker**

Boss ---> (buy me a coffee) ---> Manager ---> Bill board <--- Staff**


***
Prisma commend

*create Table in database*
=>npx prisma migrate dev

*reset Table in database*
=>npx prisma migrate reset

*seed database*
=>npx prisma db "your folder seedName"

*exiting database pull in your local file*
=>npx prisma db pull

*if you want to connect plain database with prisma,you can type this*
=>npx prisma migrate diff \
  --from-url "$DATABASE_URL_PROD" or --from-empty \
  --to-schema-datamodel prisma/schema.prisma \
  --script > prisma/migrations/0_init/migration.sql

  and then 

*you must be resolve this two difference history local prisma and exiting database with this*
=>npx prisma migrate resolve --applied "folderName(0_init)"

*deploy to production database*
=>npx prisma migrate deploy

